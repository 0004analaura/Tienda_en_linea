services:
  zookeeper:
    image: bitnami/zookeeper:3.9
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports: ["2181:2181"]
    networks: [superbodega-network]

  kafka:
    image: bitnami/kafka:3.7
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on: [zookeeper]
    ports: ["9092:9092"]
    volumes: ["kafka_data:/bitnami/kafka"]
    networks: [superbodega-network]
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: superbodega-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${DATABASE_PASSWORD_FOUR}
      - MSSQL_PID=Developer
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    healthcheck:
      test: [ "CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ${DATABASE_PASSWORD_FOUR} -Q 'SELECT 1' || exit 1" ]
      interval: 10s
      retries: 10
      start_period: 20s
      timeout: 3s
    networks:
      - superbodega-network
    restart: always

  api:
    build:
      context: ./SuperBodega
      dockerfile: SuperBodega.API/Dockerfile
    container_name: superbodega-api
    env_file:
      - .env
    environment:
      - KAFKA_BOOTSTRAP=kafka:9092
      - DOTNET_RUNNING_IN_CONTAINER=true
      - ASPNETCORE_ENVIRONMENT=Development
      - DB_CONNECTION_STRING=Server=sqlserver;Database=${DATABASE_NAME_FOUR};User Id=sa;Password=${DATABASE_PASSWORD_FOUR};TrustServerCertificate=True;
      - SA_PASSWORD=${DATABASE_PASSWORD_FOUR}
      - ASPNETCORE_URLS=http://+:8080
      - ASPNETCORE_FORWARDEDHEADERS_ENABLED=true
      - EMAIL_FROM=${EMAIL_FROM}
      - EMAIL_SMTP_SERVER=${EMAIL_SMTP_SERVER}
      - EMAIL_SMTP_PORT=${EMAIL_SMTP_PORT}
      - EMAIL_SMTP_PASSWORD=${EMAIL_SMTP_PASSWORD}
    ports:
      - "8080:8080"
    volumes:
      - type: bind
        source: ./SuperBodega/SuperBodega.API/wwwroot
        target: /app/wwwroot
        read_only: true
      - type: bind
        source: ./SuperBodega/SuperBodega.API/Views
        target: /app/Views
        read_only: true
      - producto-images:/app/wwwroot/images/productos
    depends_on:
      sqlserver:
        condition: service_started
      kafka:
        condition: service_started
    networks:
      - superbodega-network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  k6:
    image: grafana/k6
    profiles: [ "load" ] 
    volumes:
      - ./SuperBodega/tests/load:/scripts
    environment:
      - API=http://api:8080
    networks:
      - superbodega-network

volumes:
  producto-images:
  sqlserver_data:
  kafka_data:

networks:
  superbodega-network:
    driver: bridge